{"version":3,"sources":["components/Searchbar/Searchbar.module.css","components/Loader/Loader.module.css","components/Modal/Modal.module.css","components/ImageGalleryItem/ImageGalleryItem.module.css","components/ImageGallery/ImageGallery.module.css","components/Button/Button.module.css","components/Modal/Modal.js","components/Searchbar/Searchbar.js","components/ImageGalleryItem/ImageGalleryItem.js","services/apiService.js","components/Button/Button.js","components/Loader/Loader.js","components/ImageGallery/ImageGallery.js","App.js","index.js"],"names":["module","exports","lightboxRoot","document","querySelector","Lightbox","onClose","children","useEffect","handleKeyDown","e","code","window","addEventListener","removeEventListener","createPortal","className","styles","Lightbox__backdrop","onClick","currentTarget","target","Lightbox__content","Searchbar","onSubmit","useState","imageName","setImageName","SearchForm","preventDefault","trim","toast","warning","position","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","type","SearchForm__button","SearchForm__button_label","SearchForm__input","autoComplete","autoFocus","placeholder","value","onChange","toLowerCase","ImageGalleryItem","image","modalContent","openModal","onImageClick","dataset","url","alt","map","webformatURL","tags","id","largeImageURL","src","ImageGalleryItem__image","ImageApiService","this","searchQuery","page","searchParams","URLSearchParams","image_type","orientation","q","per_page","key","fetch","then","response","json","data","console","log","hits","newQuery","Button","Loader","loader__ellips","loader__ellips__dot","imageApiService","ImagesApiService","ImageGallery","images","setImages","error","setError","status","setStatus","loading","setLoading","resetPage","query","fetchImagesApi","length","catch","style","textAlign","fontSize","scrollTo","documentElement","scrollHeight","changePage","state","top","behavior","finally","App","showModal","setShowModal","modalUrl","setModalUrl","modalAlt","setModalAlt","toggleLightbox","autoClose","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c410d631.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__3dpIh\",\"SearchForm\":\"Searchbar_SearchForm__1AAvV\",\"SearchForm__button\":\"Searchbar_SearchForm__button__2q2r-\",\"SearchForm__button_label\":\"Searchbar_SearchForm__button_label__1Ng-J\",\"SearchForm__input\":\"Searchbar_SearchForm__input__3Rcgx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader__ellips\":\"Loader_loader__ellips__17Mq0\",\"loader__ellips__dot\":\"Loader_loader__ellips__dot__1dtzF\",\"reveal\":\"Loader_reveal__1oNKB\",\"slide\":\"Loader_slide__2mYty\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Lightbox__backdrop\":\"Modal_Lightbox__backdrop__1NpA6\",\"Lightbox__content\":\"Modal_Lightbox__content__3yHpv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__OqIPy\",\"ImageGalleryItem__image\":\"ImageGalleryItem_ImageGalleryItem__image__1HU6i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__OqIdx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__rZ6Ex\"};","import { useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { createPortal } from 'react-dom';\n\nimport styles from './Modal.module.css';\n\nconst lightboxRoot = document.querySelector('#lightbox-root');\n\nexport default function Lightbox({ onClose, children }) {\n  useEffect(() => {\n    function handleKeyDown(e) {\n      if (e.code === 'Escape') {\n        onClose();\n      }\n    }\n\n    window.addEventListener('keydown', handleKeyDown);\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [onClose]);\n\n  const handleBackdropClick = e => {\n    if (e.currentTarget === e.target) {\n      onClose();\n    }\n  };\n\n  return createPortal(\n    <div className={styles.Lightbox__backdrop} onClick={handleBackdropClick}>\n      <div className={styles.Lightbox__content}>{children}</div>\n    </div>,\n    lightboxRoot,\n  );\n}\n\nLightbox.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  children: PropTypes.node.isRequired,\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { toast } from 'react-toastify';\nimport styles from './Searchbar.module.css';\n\nexport default function Searchbar({ onSubmit }) {\n  const [imageName, setImageName] = useState('');\n\n  const handleNameChange = e => {\n    setImageName(e.currentTarget.value.toLowerCase());\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (imageName.trim() === '') {\n      toast.warning(\n        'You have not entered anything in the search bar, please enter a search term',\n        {\n          position: 'top-center',\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n        },\n      );\n      return;\n    }\n    onSubmit(imageName);\n    setImageName('');\n  };\n\n  return (\n    <header className={styles.Searchbar}>\n      <form className={styles.SearchForm} onSubmit={handleSubmit}>\n        <button type=\"submit\" className={styles.SearchForm__button}>\n          <span className={styles.SearchForm__button_label}>Search</span>\n        </button>\n\n        <input\n          className={styles.SearchForm__input}\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search images and photos\"\n          value={imageName}\n          onChange={handleNameChange}\n        />\n      </form>\n    </header>\n  );\n}\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport styles from './ImageGalleryItem.module.css';\n\nexport default function ImageGalleryItem({ image, modalContent, openModal }) {\n  const onImageClick = e => {\n    modalContent(e.target.dataset.url, e.target.alt);\n    openModal();\n  };\n\n  return (\n    <>\n      {image.map(({ webformatURL, tags, id, largeImageURL }) => {\n        return (\n          <li key={id} className={styles.ImageGalleryItem}>\n            <img\n              src={webformatURL}\n              alt={tags}\n              className={styles.ImageGalleryItem__image}\n              data-url={largeImageURL}\n              onClick={onImageClick}\n            />\n          </li>\n        );\n      })}\n    </>\n  );\n}\n\nImageGalleryItem.propTypes = {\n  image: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      webformatURL: PropTypes.string.isRequired,\n      largeImageURL: PropTypes.string.isRequired,\n      tags: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n  openModal: PropTypes.func.isRequired,\n  modalContent: PropTypes.func.isRequired,\n};\n","const API_KEY = '10446885-1251e891c865ea43d940edb73';\nconst BASE_URL = 'https://pixabay.com';\n\nexport default class ImageApiService {\n  constructor() {\n    this.searchQuery = '';\n    this.page = 1;\n  }\n\n  fetchImagesApi() {\n    const searchParams = new URLSearchParams({\n      image_type: 'photo',\n      orientation: 'horizontal',\n      q: this.searchQuery,\n      page: this.page,\n      per_page: '12',\n      key: API_KEY,\n    });\n\n    const url = `${BASE_URL}/api/?${searchParams}`;\n\n    return fetch(url)\n      .then(response => response.json())\n      .then(data => {\n        console.log(this.page);\n        return data.hits;\n      });\n  }\n\n  changePage() {\n    this.page += 1;\n  }\n\n  resetPage() {\n    this.page = 1;\n  }\n\n  get query() {\n    return this.searchQuery;\n  }\n\n  set query(newQuery) {\n    this.searchQuery = newQuery;\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport styles from './Button.module.css';\n\nconst Button = ({ onClick, children }) => {\n  return (\n    <button type=\"button\" className={styles.Button} onClick={onClick}>\n      {children}\n    </button>\n  );\n};\n\nButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nexport default Button;\n","import React from 'react';\nimport styles from './Loader.module.css';\n\nconst Loader = () => {\n  return (\n    <div className={styles.loader__ellips}>\n      <span className={styles.loader__ellips__dot}></span>\n      <span className={styles.loader__ellips__dot}></span>\n      <span className={styles.loader__ellips__dot}></span>\n      <span className={styles.loader__ellips__dot}></span>\n    </div>\n  );\n};\n\nexport default Loader;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { toast } from 'react-toastify';\n\nimport styles from './ImageGallery.module.css';\nimport ImageGalleryItem from '../ImageGalleryItem';\nimport ImagesApiService from '../../services/apiService';\nimport Button from '../Button';\nimport Loader from '../Loader';\n\nconst imageApiService = new ImagesApiService();\n\nexport default function ImageGallery({ imageName, modalContent, openModal }) {\n  const [images, setImages] = useState(null);\n  const [error, setError] = useState(null);\n  const [status, setStatus] = useState('idle');\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    if (!imageName) {\n      return;\n    }\n    imageApiService.resetPage();\n    setLoading(true);\n    setStatus('pending');\n\n    imageApiService.query = imageName;\n    imageApiService\n      .fetchImagesApi()\n      .then(image => {\n        if (image.length === 0) {\n          toast.warning(\n            `Sorry for your request ${imageName}, no results were found.`,\n            {\n              position: 'top-right',\n              hideProgressBar: false,\n              closeOnClick: true,\n              pauseOnHover: true,\n              draggable: true,\n              progress: undefined,\n            },\n          );\n          setError(\n            `Sorry for your request ${imageName}, no results were found.`,\n          );\n          setLoading(true);\n          setStatus('rejected');\n          return;\n        } else {\n          setImages(image);\n          setLoading(true);\n          setStatus('resolved');\n        }\n      })\n      .catch(error => {\n        setError(error);\n        setStatus('rejected');\n      });\n  }, [imageName]);\n\n  const handleButtonClick = () => {\n    const scrollTo = document.documentElement.scrollHeight - 141;\n    imageApiService.changePage();\n    imageApiService\n      .fetchImagesApi()\n      .then(image => {\n        setImages(state => [...state, ...image]);\n        setLoading(true);\n\n        window.scrollTo({\n          top: scrollTo,\n          behavior: 'smooth',\n        });\n      })\n\n      .finally(setLoading(false));\n  };\n\n  if (status === 'idle') {\n    return (\n      <div\n        style={{\n          textAlign: 'center',\n          fontSize: '18px',\n        }}\n      >\n        Enter what picture you want to find\n      </div>\n    );\n  }\n\n  if (status === 'pending') {\n    imageApiService.resetPage();\n    return (\n      <div\n        style={{\n          textAlign: 'center',\n        }}\n      >\n        <Loader />\n      </div>\n    );\n  }\n\n  if (status === 'rejected') {\n    imageApiService.resetPage();\n    return (\n      <h2\n        style={{\n          textAlign: 'center',\n        }}\n      >\n        {error}\n      </h2>\n    );\n  }\n\n  if (status === 'resolved') {\n    return (\n      <>\n        <ul className={styles.ImageGallery}>\n          <ImageGalleryItem\n            image={images}\n            openModal={openModal}\n            modalContent={modalContent}\n          />\n        </ul>\n        {loading ? (\n          <Button onClick={handleButtonClick}>Load more</Button>\n        ) : (\n          <Loader />\n        )}\n      </>\n    );\n  }\n}\n\nImageGallery.propTypes = {\n  openModal: PropTypes.func.isRequired,\n  modalContent: PropTypes.func.isRequired,\n  imageName: PropTypes.string.isRequired,\n};\n","import React, { useState } from 'react';\n// import { v4 as uuidv4 } from \"uuid\";\nimport { ToastContainer } from 'react-toastify';\nimport Modal from './components/Modal';\nimport Searchbar from './components/Searchbar';\nimport ImageGallery from './components/ImageGallery';\nimport 'react-toastify/dist/ReactToastify.min.css';\n\nexport default function App() {\n  const [imageName, setImageName] = useState('');\n  const [showModal, setShowModal] = useState(false);\n  const [modalUrl, setModalUrl] = useState('');\n  const [modalAlt, setModalAlt] = useState('');\n\n  const toggleLightbox = () => {\n    setShowModal(!showModal);\n  };\n\n  const handleFormSubmit = imageName => {\n    setImageName(imageName);\n  };\n\n  const modalContent = (url, alt) => {\n    setModalUrl(url);\n    setModalAlt(alt);\n  };\n\n  return (\n    <>\n      <Searchbar onSubmit={handleFormSubmit} />\n      <ImageGallery\n        imageName={imageName}\n        openModal={toggleLightbox}\n        modalContent={modalContent}\n      />\n\n      {showModal && (\n        <Modal onClose={toggleLightbox}>\n          <img src={modalUrl} alt={modalAlt} />\n        </Modal>\n      )}\n      <ToastContainer autoClose={3000} />\n    </>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}